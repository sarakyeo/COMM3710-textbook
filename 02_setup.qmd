# Assignment Setup {#sec-setup}

In this course you will use R for lab assignments. This chapter walks you through setting up R in preparation for completing assignments. Although you may have to refer to this chapter the first few times you set up R, you will soon become accustomed to the process and it will be a natural part of your workflow.


## Open RStudio or Posit Cloud

Remember that R is the engine while RStudio is your dashboard. If you are using Posit Cloud, your engine is already integrated and you only need to navigate to the dashboard on the Posit Cloud website.

This is analogous to when you head out in a car; you don't start by tinkering with the engine. Instead, you use the car via its dashboard.

Similarly, we will interact and use R through RStudio or Posit Cloud.


## Create a new R script

To start a new R script, use the *File* menu or the shortcut keys Ctrl + Shift + N (Windows) or Cmd + Shift + N (Mac).^[Keyboard shortcuts are available under *Tools* $\rightarrow$ *Keyboard Shortcuts Help*.] You can also use your mouse to point-and-click to open a new file in RStudio (@fig-newscript) or Posit Cloud (@fig-newpositscript).

```{r}
#| label: fig-newscript
#| echo: FALSE
#| fig.cap: "Open a new R script in RStudio."
#| fig-align: center

knitr::include_graphics("images/new-R-script.gif")

```

```{r}
#| label: fig-newpositscript
#| echo: FALSE
#| fig.cap: "Open a new R script in Posit Cloud."
#| fig-align: center

knitr::include_graphics("images/posit-new-file.gif")

```

## Prepare R script

To prepare your R script, use comments to type any relevant information about the script. Examples of relevant information include your name, your course, the semester during which you are enrolled in this course, the assignment name.

Comments in R are denoted by the hashtag symbol, `#`.

```{r}

## This is a comment.

# Name: Test Student
# UNID: u0000000
# Section: 002
# Assignment: LA-3

```

Once you have included information about your script as comments, you can move on to creating foldable code sections.

## Creating foldable code sections

You can also create sections of foldable code in RStudio (`Code` > `Insert Section...`). @fig-fold below shows you how. Once you have created a section, you can collapse it by clicking the arrows next to the line numbers in the script pane.

```{r}
#| label: fig-fold
#| echo: false
#| fig-cap: "Creating sections of foldable code."
#| fig-align: center

knitr::include_graphics("images/R-foldable-code.gif")

```


## Install and load packages

Next, you need to install and load the R packages you will be using for this R session. Refer to @sec-packages for more information about installing vs. loading packages.

Remember that you only need to install packages once but you need to load packages each time you open R.


::: {.callout-tip}
The functions to install and load packages are `install.packages()` and `library()`, respectively.
:::

```{r}
#| label: package-cmd
#| echo: true
#| eval: false

## Install the tidyverse package
install.packages("tidyverse")

## Load the tidyverse package (after installing)
library(tidyverse)

```


## Saving your R script {#sec-saveRscript}

**Be sure to save your work often.**

You are likely familiar with file types like `.docx` (Word documents), `.pdf` (PDF documents), and `.txt` (text files). If you have not worked with R prior to enrolling in this course, you may not have encountered files with the extension `.R`.

Files with a `.R` extension are known as **R scripts**. As noted in @sec-tour, a R script is simply a text file containing a set of commands and comments.

To save your script, click the <img src="images/save.png"/> icon in RStudio or use the **File** menu (@fig-save). Give the file a sensible name and click **Save**. The file will be saved as `<filename>.R` in your working directory.

```{r}
#| label: fig-save
#| echo: false
#| fig-cap: "Saving your R script in Posit Cloud or RStudio."
#| fig-align: center

knitr::include_graphics("images/saving-R-script.gif")

```


## R script checklist for lab assignments

Be sure you have *at least* the following components in your R script. This list is **not** comprehensive. It represents the minimal requirements for your R script.

- [ ] Full name and student ID \#
- [ ] Assignment name/number (e.g., LA.1)
- [ ] Annotations explaining your R code
- [ ] R commands to install (if necessary) and load packages
- [ ] R commands necessary for completion of your assignment
