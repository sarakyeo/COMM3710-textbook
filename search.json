[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "COMM 3710: Getting Started with R",
    "section": "",
    "text": "1 Introduction\nThis is a guide for getting started and using R on Posit Cloud or RStudio in COMM 3710: Introduction to Quantitative Communication Research in the Department of Communication at the University of Utah.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introduction</span>"
    ]
  },
  {
    "objectID": "index.html#what-is-r",
    "href": "index.html#what-is-r",
    "title": "COMM 3710: Getting Started with R",
    "section": "1.1 What is R?",
    "text": "1.1 What is R?\n\n\n\n\n\n\nTip\n\n\n\n“R is a language and environment for statistical computing and graphics.”1\n\n\nR is a free software environment for computing and graphics from CRAN, the Comprehensive R Archive Network. You can always read more about R by visiting the homepage of the R Project for Statistical Computing but you are probably more interested in the answer to the following question:\n\nWhat is R in the context of COMM 3710?\n\nIn this course, you will learn to use R for data analysis. In other words, R is the software that you will primarily use in COMM 3710 lab.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introduction</span>"
    ]
  },
  {
    "objectID": "index.html#why-r",
    "href": "index.html#why-r",
    "title": "COMM 3710: Getting Started with R",
    "section": "1.2 Why R?2",
    "text": "1.2 Why R?2\nIncreasingly, data are important components of decision-making. Whether you are looking at industry trends, generating financial statements and reports, analyzing market data, or creating visuals to communicate your work, you will need to know how to analyze data to efficiently, accurately, and professionally to develop reports and effectively communicate your findings.\nR is a tool that can help you do all this and more. This course will help you become familiar with this powerful data analysis tool. Often, students ask why we use R instead of Microsoft Excel in this course.\nHere are some reasons for using R over Excel.\n\n1.2.1 Ease of Use\nThere is little doubt that Excel is much easier to use than R. Most of us already know many Excel basics and the learning curve is minimal compared to R. This is partly due to the point-and-click nature of Excel, allowing us to make simple charts and tables.\nR, on the other hand, is a programming language. This means that the initial learning curve is, for most, likely to be steeper than that of Excel. However, with practice and time, R becomes easier quickly and you will soon realize that R is a powerful tool for analysis and generating visuals from data.\n\n\n1.2.2 Replicating Analysis\nHaving to use the point-and-click interface, or the graphical user interface (GUI), is a distinct disadvantage of Excel. Because you cannot import or use scripts, which are a collection of commands, in Excel, you must rely on memory to replicate your analysis.\n\n\n\n\n\n\nTip\n\n\n\nIn Excel, you must rely on memory to replicate data analysis. In R, you can simply re-run your saved script.\n\n\nR, on the other hand, is capable of reproducing analyses quickly and with different datasets. The commands for data analysis that you use in R can be saved as a script, which can then be run on multiple datasets. In other words, when we use R for data analysis, we do not have to “reinvent the (data analysis) wheel” as you would with Excel.\n\n\n1.2.3 Visualization\nFor simple graphics, Excel (with its minimal learning curve) can suffice. However, it is cumbersome to create attractive and professional-quality tables and figures in Excel.\nVisualization is where R excels (hah, see what I did there!). When datasets begin to get complicated or large, R is better equipped to handle them without making errors and can create impressive and easily customizable visual representations.\n\n\n1.2.4 Still wondering why we use R?\nIf you are still wondering why we are using R instead of Microsoft Excel for data analysis in this course, here are some examples that help illustrate the utility of R over Excel.\n\nHow the BBC Visual and Data Journalism team works with graphics in R\nThe Reinhart-Rogoff error - or How Not to Excel at Economics",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introduction</span>"
    ]
  },
  {
    "objectID": "index.html#r-vs.-rstudio-vs.-posit-cloud",
    "href": "index.html#r-vs.-rstudio-vs.-posit-cloud",
    "title": "COMM 3710: Getting Started with R",
    "section": "1.3 R vs. RStudio vs. Posit Cloud",
    "text": "1.3 R vs. RStudio vs. Posit Cloud\nFigure 1.1 is a good illustration of the distinction between R and RStudio (Ismay and Kim 2021).\n\n\n\n\n\n\n\n\nFigure 1.1: Analogy of the difference betweenR and RStudio. Source: ModernDive Chapter 1.\n\n\n\n\n\nThroughout this course, you will be using R via RStudio or Posit Cloud. This means that you will need to have both R and RStudio installed on your computer. If you are using Posit Cloud, you will not need to install anything on your computer.\n\n\n\n\n\n\nTip\n\n\n\nIf you are using RStudio, you will need to install R and RStudio on your computer. If you are using Posit Cloud, you will not need to install anything on your computer.\n\n\nNew users often confuse R and RStudio. The analogy makes it clear that one cannot be functional without the other. Just like the dashboard of a car would not be functional without the engine and vice versa, RStudio and R are not functional without each other.\nRemember that R is a programming language for statistical computing and graphics. RStudio, on the other hand, is an integrated development environment (IDE) that provides an interface and adds convenient features. Just like your dashboard has an odometer, navigation system, etc., that makes driving easier, using RStudio’s interface makes statistical computing using R much easier.\nPart of this video by Andy Field describes the difference between R and RStudio. This video will also show you how to install R and RStudio, which are covered in Section 2.1.\n\n\n\n\nIsmay, Chester, and Albert Y. Kim. 2021. Statistical Inference via Data Science. https://moderndive.com/.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introduction</span>"
    ]
  },
  {
    "objectID": "index.html#footnotes",
    "href": "index.html#footnotes",
    "title": "COMM 3710: Getting Started with R",
    "section": "",
    "text": "https://www.r-project.org/about.html↩︎\nAdapted from R vs. Excel: What’s the Difference?↩︎",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introduction</span>"
    ]
  },
  {
    "objectID": "01_get-started.html",
    "href": "01_get-started.html",
    "title": "2  Getting Started",
    "section": "",
    "text": "2.1 Installing R\nRemember that you need either Posit Cloud or both R and RStudio. If you need R and RStudio, follow the instructions below to install both programs (also known as applications). If you are using Posit Cloud, skip to Section 2.3 (Getting Started on Posit Cloud) or Section 2.4 (How do I Use R?).\nOn a web browser, navigate to https://cloud.r-project.org/.\nDuring installation, select the default settings when prompted.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Getting Started</span>"
    ]
  },
  {
    "objectID": "01_get-started.html#sec-installR",
    "href": "01_get-started.html#sec-installR",
    "title": "2  Getting Started",
    "section": "",
    "text": "If you are a Windows user: Click on “Download R for Windows”, then click on “base”, then click on the Download link.\nIf you are macOS user: Click on “Download R for (Mac) OS X”, then under “Latest release:” click on R-X.X.X.pkg, where R-X.X.X is the version number. For example, the latest version of R (as of this writing) is R-4.5.1.\nIf you are a Linux user: Click on “Download R for Linux” and choose your distribution for more information on installing R for your setup.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Getting Started</span>"
    ]
  },
  {
    "objectID": "01_get-started.html#sec-installRStudio",
    "href": "01_get-started.html#sec-installRStudio",
    "title": "2  Getting Started",
    "section": "2.2 Installing RStudio",
    "text": "2.2 Installing RStudio\nOn a web browser, go to https://rstudio.com/products/rstudio/download/. Scroll down to All Installers. Download and install the version of RStudio that corresponds to your operating system. Update RStudio as necessary.\nWhen you are ready to use R, you will open RStudio. In this course, you will rarely, if ever, need to use “base R.” Figure 2.1 shows you which icon to click on to open RStudio. Remember that you need to have both programs installed on your computer–one does not work without the other.\n\n\n\n\n\n\nImportant\n\n\n\nFrom this point on, when “R” is referenced in the text, you know that you are accessing and using the language through RStudio.\n\n\n\n\n\n\n\n\n\n\nFigure 2.1: Typically, you will only need to use RStudio for this course. Click the icon on the right to open RStudio. The icon on the left is “base R.” Source: ModernDive.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Getting Started</span>"
    ]
  },
  {
    "objectID": "01_get-started.html#sec-signupposit",
    "href": "01_get-started.html#sec-signupposit",
    "title": "2  Getting Started",
    "section": "2.3 Getting Started on Posit Cloud",
    "text": "2.3 Getting Started on Posit Cloud\n\nOpen a web browser and navigate to Posit.Cloud.\nClick on Log In in the top right corner of the page.\nOn the next screen, click on the Sign Up tab or sign in with your Google or Github account (pick one if you have it and would like to use it for the course). You may sign up with any account that you would like.\nOnce you have created an account, log in.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Getting Started</span>"
    ]
  },
  {
    "objectID": "01_get-started.html#sec-howto",
    "href": "01_get-started.html#sec-howto",
    "title": "2  Getting Started",
    "section": "2.4 How do I use R?",
    "text": "2.4 How do I use R?\nUnlike Excel, which has a point-and-click GUI, R is an interpreted language. This means that you, the user, must type in commands written in R code. In other words, this course will teach you to code or program using the R language.1\nIn COMM 3710, we will learn R by “doing.” You are responsible for your own learning–the best way to master R is to practice deliberately.\n\n“While regular practice might include mindless repetitions, deliberate practice requires focused attention and is conducted with the specific goal of improving performance.” (Clear 2017)\n\n\n2.4.1 A quick tour of RStudio and Posit Cloud\nWatch this video by Andy Field to take a quick tour of RStudio.\nAs you have learned from Andy Field’s video, the RStudio and Posit Cloud interfaces consist of four panels (Figure 2.2).\n\nWait! I only see 3 panels…\n\nIf you happen to see only three panels, please select File \\(\\rightarrow{}\\) New File \\(\\rightarrow{}\\) R Script. Your RStudio/Posit Cloud should look like Figure 2.2.\n\n\n\n\n\n\n\n\nFigure 2.2: Editor and Console windows in RStudio.\n\n\n\n\n\n\n\n2.4.2 Some basic terminology and concepts\nThroughout the book, R code will be distinguished from text by using a different font. Let’s start with some basic terms.\n\nConsole: This is the panel in RStudio/Posit Cloud where you can view the output or results of your commands. Note that you can also enter commands in the Console panel. Pressing Enter after each command runs it, i.e., it tells R to execute the command.\nEditor: This is the panel in RStudio/Posit Cloud where you type commands in language that R understands. Think of this as a script containing instructions for R. You can save this script, which makes the work you have done reproducible.\nR script: A script is simply a text file containing a set of commands and comments. The script can be saved and used later to (re-)execute the saved commands. The script can also be edited so you can execute a modified version of the commands.\nObjects: Values in R are saved in objects.\nDataframes: These are representations of datasets in R where the rows correspond to observations and the columns correspond to variables that describe the observations.\nLogical operators: These are operators in R that represent “and” (&) and “or” (|).\nFunctions: Functions are also known as commands. Functions and commands tell R what you want it to do. Functions take the form of command() with parentheses (or parents). The parentheses are for arguments, which give R specifics about the function you want it to perform.\n\n\n\n2.4.3 Errors, warnings, and messages\nR shows errors, warnings, and messages in the Console window. Typically, it does so in red font, which can be intimidating for new users.\nDo not worry, you are unlikely to “break” R. And as long as you save your work frequently, you will not lose it.\n\n\n\n\n\n\nTip\n\n\n\nAlways read errors, warnings, or messages carefully; they often provide information that will help you troubleshoot the issue.\n\n\n\n\n2.4.4 Tips for learning to code\nLearning to code can be frustrating at first. Frustrations are understandable and inevitable. But with deliberate practice, your coding and programming skills will improve.\nKeep the following tips from Ismay and Kim (2021) in mind as you learn to code in R:\n\nComputers are not that smart. You are the brains of the computer–it needs to be told what to do. Instructions must be clear and without ambuguity.\nCopy, paste, tweak. When you begin to learn coding, it is much easier to copy, paste, and modify code than start from scratch. When you first start to program, take existing code from the resources for this course, copy, paste, and tweak them to suit your goals. Once you become more comfortable with R, you will be able to recall functions and code from memory.\nLearning by doing. The best way to learn coding/programming is by doing. This is why COMM 3710 includes a lab component. Individual lab assignments and group project components afford you the opportunity to learn how to code and use R by completing tasks with a goal in mind.\nPractice, practice, practice. As with any skill, practice is necessary for improvement. Start on assignments early–anticipate that you will face challenges the first time you try an assignment. Use the resources provided in the course to help you troubleshoot. Most students do not start their assignments early enough to troubleshoot issues that arise. You can also use R for other courses–it is a versatile programming language that is powerful once you learn to use it. In fact, this book was made with R!\nR is case-sensitive. Most coding mistakes are typos. This is exacerbated when the programming language, such as R, is case-sensitive. Result, result, and RESULT are all different in R!\n\n\n\n2.4.5 R packages\nThere is a worldwide community of R users (e.g., search for #RCatLadies on X) who write code and bundle them into packages to extend the functionality of R.\nSome examples that we will use in this course include ggplot2 (Wickham, Navarro, and Pederson 2020), descr, and tidyverse.\nPackages in R are like apps on your phone–they extend the functionality of the base technology (Figure 2.3).\n\n\n\n\n\n\n\n\nFigure 2.3: R packages for R are analogous to apps for your mobile device.\n\n\n\n\n\nThere are two steps to using apps to extend the functionality of your phone:\n\nInstall app on your device from app store. This is typically done only once. An app that has been installed on your phone does not require additional installation.\nOpen app from device. You must open the app every time you wish to use it.\n\nSimilarly, R packages need to be installed on your computer and then opened and then loaded in R (Figure Figure 2.4). Note where quotation marks are used and omitted in the commands.\n\n\n\n\n\n\n\n\nFigure 2.4: Watch this gif to learn how to install and load packages in R. Note that the commands are typed into the Editor, not the Console–to run the commands written in the Editor, highlight and click Run in the top right corner.\n\n\n\n\n\n\nTo install a package, type install.packages() in the Console window. The argument that needs to be provided is the name of the package. For example, if you are installing the descr package, you would use the command install.packages(\"descr\"). Like an app, you only need to install a package once.\nTo use a package, you must load it. This is like opening an app–it must be done everytime you open a new R session. To load a package, use the command library(). The argument within the parentheses is the name of the package you want to load. For example, to load the descr package, use library(descr).\n\nSome common errors related to installing and loading packages, which R displays in red in the Console, are shown below:\nError in library(descr) : there is no package called ‘descr’\nIf you get this error, this means that you have not installed the package.\nError: could not find function\nThis error means that you likely did not load the package for this R session. Remember, you need to load R packages each time you open R.\n\n\n2.4.6 How do I know whether I need to install or load a package?\n\n\n\n\n\n\n\n\nFigure 2.5: Flowchart to help determine whether you should load or install packages.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Getting Started</span>"
    ]
  },
  {
    "objectID": "01_get-started.html#learning-by-doing",
    "href": "01_get-started.html#learning-by-doing",
    "title": "2  Getting Started",
    "section": "2.5 Learning by doing",
    "text": "2.5 Learning by doing\nLet’s try out some commands. Open RStudio and start a new R script. If you need a reminder of how to start a new R script, review Section 2.4.1. To save your R script, see Section 3.6.\nTo start, let’s execute a simple command. In the Editor, type the following command.\n\n4 + 8\n\nTo run this command, which tells R to sum 4 and 8, highlight the command and click the  button in the upper right of the Editor window. You can also use the shortcut keys: Ctrl + Enter (Windows) or Cmd + Enter (Mac).\nYou will see the result of the command you just ran in the Console window.\n\n\n[1] 12\n\n\nNote that the [1] is produced by R. You can think of this as R telling you that this value, 12, is the answer to the first question you asked.2\nNext, try:\n\n3 * 3\n\nWhen you run this command, R will return the product of these two numbers.\n\n\n[1] 9\n\n\nAlthough it is good practice to write and execute commands line-by-line when you are first writing a R script, it can become tedious. To alleviate the tedium, you can run multiple commands at once by selecting all the lines that you want R to execute and using the keyboard shortcuts or the  button.\nType the following two lines in your Editor and try running them together:\n\n12 + 8\n16 / 4\n\nThe results in your Console panel should look like this:\n\n\n[1] 20\n\n\n[1] 4\n\n\nTable 2.1 shows some basic arithmetic operations in R. Play around with these functions in R to familiarize yourself with the R interface.\n\n\n\n\nTable 2.1: Operations, operators, and example inputs and outputs in R.\n\n\n\n\n\n\nOperation\nOperator\nInput\nOutput\n\n\n\n\naddition/sum\n+\n2 + 2\n4\n\n\nsubtraction\n-\n9 - 2\n7\n\n\nmultiplication/product\n*\n5 * 5\n25\n\n\ndivision\n/\n12 / 3\n4\n\n\npower/exponent\n^\n5 ^ 2\n25\n\n\n\n\n\n\n\n\n\n2.5.1 Creating objects\nR is an OOP or object-oriented programming language.\nYou can think of an object as a container that holds information that you, the user, assigns to it. You will need to assign a label to the container. R stores the information within the labeled container in the Environment ( Figure 2.6), which is the one of the tabs in the top right panel of RStudio.\n\n\n\n\n\n\n\n\nFigure 2.6: The Environment panel in RStudio/Posit Cloud.\n\n\n\n\n\nWe assign information to an object by using the assignment operator, &lt;-. The generic code for creating an object looks like:\nlabel &lt;- information\nLet’s say that we want to save the result of 2 * 10 to an object and call it kittens. In the Editor window, type and run the following R code:\n\nkittens &lt;- 2 * 10\n\nNotice that the result in the Console when you ran this command did not give you the result of 2 * 10.\nThis is because the result is stored as the object, kittens, and you have to ask R to display the result by calling the object. In the Editor, type kittens and run this command. You should see the result in the Console.\n\nkittens\n\n[1] 20\n\n\nNotice that the object, kittens, appeared in the Environment when you ran the command, kittens &lt;- 2 * 10 (Figure 2.7).\n\n\n\n\n\n\n\n\nFigure 2.7: The Environment panel after you run the R code to create the object, kittens.\n\n\n\n\n\n\n\n2.5.2 Data types\nR can store objects with different types of data. Let’s create three objects containing different data types.\n\na &lt;- 19.81\nb &lt;- \"Hello, Salt Lake City!\"\nc &lt;- TRUE\n\nTo check the type of data contained in objects a, b, and c, use the class() function.\n\nclass(a)\nclass(b)\nclass(c)\n\nYour Console should show:\n\n\n[1] \"numeric\"\n\n\n[1] \"character\"\n\n\n[1] \"logical\"\n\n\na is numeric; b is a character string; c is a so-called “logical” data type that is either TRUE or FALSE. These data types can be organized into various data structures. For example, a data frame, such as the data files you will use in your assignments, is one data structure.\n\n\n2.5.3 R Functions\nAs mentioned in Section Section 2.4.2, functions are commands that tell R what you want it to do. Functions take the (generic) form of command() with parentheses (or parents). The parentheses are for arguments, which give R specifics about the function you want it to perform.\nFor example, the print() function will print the result of the argument or input within the parentheses.\n\nprint(\"Hello, SLC!\")\n\n[1] \"Hello, SLC!\"\n\nprint(5 * 10)\n\n[1] 50\n\nprint(3 &gt; 5)\n\n[1] FALSE\n\n\n\n\n2.5.4 Working with data frames\nLet’s create a data frame to learn how to work with them. In the Editor panel, create a data frame by typing the following commands:\n\nid &lt;- 1:7\ncats &lt;- c(1, 3, 2, 3, 5, 2, 3)\ngender &lt;- c('male', 'female', 'male', 'female', 'male', 'female', 'female')\n\nWith the code above, you have created 3 objects, id, cats, and gender, using the concatenate() function, which can be shortened to c(). Assume these data represent 7 individuals who own a varying number of cats. And we have data on each individual’s gender.\nLet’s create a data frame from these individual objects.\n\nmydata &lt;- data.frame(id, gender, cats)\nView(mydata)\n\nAfter running the commands above, notice that your Environment panel now looks like Figure 2.8. Your data frame should look like Figure 2.9.\n\n\n\n\n\n\n\n\nFigure 2.8: Your Environment panel should look like this once you have run the above code.\n\n\n\n\n\n\n\n\n\n\n\n\n\nFigure 2.9: The dataframe you just created.\n\n\n\n\n\nUsing the mydata data frame, we will calculate the mean number of cats an individual in our data set owns.\n\nmean(mydata$cats)\n\n[1] 2.714286\n\n\nThe $ allows us to extract a column of data, or a variable, from the mydata data frame. The use of $ will be important when working with R throughout this course.\nTo see how many females vs. males are included in the data frame, use the following command.\n\ntable(mydata$gender)\n\n\nfemale   male \n     4      3 \n\n\nLet’s now look at only the number of cats owned by males in our data. This means we need to subset the data. To do so, we use square brackets, [] combined with logical operators. In this case, we will use the logical operator, ==, which means “equal to.”\n\nmydata$cats[mydata$gender == \"male\"]\n\n[1] 1 2 5\n\n\nTo calculate the mean number of cats owned by males, we can either create a second data frame that is the subset of mydata…\n\nMonly &lt;- subset(mydata, gender == \"male\")\nmean(Monly$cats) # in this case, we must use the column, cats, in the data frame that has been subsetted, Monly.\n\n[1] 2.666667\n\n\nor we can include the last command as an argument in the mean() function.\n\nmean(mydata$cats[mydata$gender == \"male\"])\n\n[1] 2.666667\n\n\n\n\n2.5.5 Logical operators\nWe used one possible logical operator, ==, in the example above. Other logical operators include:\n\n&lt;: less than\n&lt;=: less than or equal to\n&gt;: greater than\n&gt;=: greater than or equal to\n!=: not equal to\n==: equal to\n&: and (e.g., a & b means “a AND b”)\n|: or (e.g., a | b means “a OR b”)\n\nWe can also use ! to specify a condition as not something. Returning to our example of the mean number of cats males in mydata own, we could instead calculate the mean of cats owned by all individuals who are != \"female\" or “not female.”\n\nmean(mydata$cats[mydata$gender != \"female\"])\n\n[1] 2.666667\n\n\nFigure 2.10 is a visual representation of the differences between some logical operators.\n\n\n\n\n\n\n\n\nFigure 2.10: Differences between Boolean operators AND, OR, and NOT.\n\n\n\n\n\n\n\n\n\nClear, James. 2017. “The Beginner’s Guide to Deliberate Practice.” James Clear. January 23, 2017. https://jamesclear.com/beginners-guide-deliberate-practice.\n\n\nIsmay, Chester, and Albert Y. Kim. 2021. Statistical Inference via Data Science. https://moderndive.com/.\n\n\nWickham, Hadley, Danielle Navarro, and Thomas Lin Pederson. 2020. Ggplot2: Elegant Graphics for Data Analysis. 3rd ed. Use R! New York, NY: Springer-Verlag. https://ggplot2-book.org/.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Getting Started</span>"
    ]
  },
  {
    "objectID": "01_get-started.html#footnotes",
    "href": "01_get-started.html#footnotes",
    "title": "2  Getting Started",
    "section": "",
    "text": "The terms coding and programming are used interchangeably in this book.↩︎\nThis is not exactly accurate, but it is close enough for now.↩︎",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Getting Started</span>"
    ]
  },
  {
    "objectID": "02_setup.html",
    "href": "02_setup.html",
    "title": "3  Assignment Setup",
    "section": "",
    "text": "3.1 Open RStudio or Posit Cloud\nIn this course you will use R for lab assignments. This chapter walks you through setting up R in preparation for completing assignments. Although you may have to refer to this chapter the first few times you set up R, you will soon become accustomed to the process and it will be a natural part of your workflow.\nRemember that R is the engine while RStudio is your dashboard. If you are using Posit Cloud, your engine is already integrated and you only need to navigate to the dashboard on the Posit Cloud website.\nThis is analogous to when you head out in a car; you don’t start by tinkering with the engine. Instead, you use the car via its dashboard.\nSimilarly, we will interact and use R through RStudio or Posit Cloud.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Assignment Setup</span>"
    ]
  },
  {
    "objectID": "02_setup.html#create-a-new-r-script",
    "href": "02_setup.html#create-a-new-r-script",
    "title": "3  Assignment Setup",
    "section": "3.2 Create a new R script",
    "text": "3.2 Create a new R script\nTo start a new R script, use the File menu or the shortcut keys Ctrl + Shift + N (Windows) or Cmd + Shift + N (Mac).1 You can also use your mouse to point-and-click to open a new file in RStudio (Figure 3.1) or Posit Cloud (Figure 3.2).\n\n\n\n\n\n\n\n\nFigure 3.1: Open a new R script in RStudio.\n\n\n\n\n\n\n\n\n\n\n\n\n\nFigure 3.2: Open a new R script in Posit Cloud.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Assignment Setup</span>"
    ]
  },
  {
    "objectID": "02_setup.html#prepare-r-script",
    "href": "02_setup.html#prepare-r-script",
    "title": "3  Assignment Setup",
    "section": "3.3 Prepare R script",
    "text": "3.3 Prepare R script\nTo prepare your R script, use comments to type any relevant information about the script. Examples of relevant information include your name, your course, the semester during which you are enrolled in this course, the assignment name.\nComments in R are denoted by the hashtag symbol, #.\n\n## This is a comment.\n\n# Name: Test Student\n# UNID: u0000000\n# Section: 002\n# Assignment: LA-3\n\nOnce you have included information about your script as comments, you can move on to creating foldable code sections.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Assignment Setup</span>"
    ]
  },
  {
    "objectID": "02_setup.html#creating-foldable-code-sections",
    "href": "02_setup.html#creating-foldable-code-sections",
    "title": "3  Assignment Setup",
    "section": "3.4 Creating foldable code sections",
    "text": "3.4 Creating foldable code sections\nYou can also create sections of foldable code in RStudio (Code &gt; Insert Section...). Figure 3.3 below shows you how. Once you have created a section, you can collapse it by clicking the arrows next to the line numbers in the script pane.\n\n\n\n\n\n\n\n\nFigure 3.3: Creating sections of foldable code.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Assignment Setup</span>"
    ]
  },
  {
    "objectID": "02_setup.html#install-and-load-packages",
    "href": "02_setup.html#install-and-load-packages",
    "title": "3  Assignment Setup",
    "section": "3.5 Install and load packages",
    "text": "3.5 Install and load packages\nNext, you need to install and load the R packages you will be using for this R session. Refer to Section 2.4.5 for more information about installing vs. loading packages.\nRemember that you only need to install packages once but you need to load packages each time you open R.\n\n\n\n\n\n\nTip\n\n\n\nThe functions to install and load packages are install.packages() and library(), respectively.\n\n\n\n## Install the tidyverse package\ninstall.packages(\"tidyverse\")\n\n## Load the tidyverse package (after installing)\nlibrary(tidyverse)",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Assignment Setup</span>"
    ]
  },
  {
    "objectID": "02_setup.html#sec-saveRscript",
    "href": "02_setup.html#sec-saveRscript",
    "title": "3  Assignment Setup",
    "section": "3.6 Saving your R script",
    "text": "3.6 Saving your R script\nBe sure to save your work often.\nYou are likely familiar with file types like .docx (Word documents), .pdf (PDF documents), and .txt (text files). If you have not worked with R prior to enrolling in this course, you may not have encountered files with the extension .R.\nFiles with a .R extension are known as R scripts. As noted in Section 2.4.1, a R script is simply a text file containing a set of commands and comments.\nTo save your script, click the  icon in RStudio or use the File menu (Figure 3.4). Give the file a sensible name and click Save. The file will be saved as &lt;filename&gt;.R in your working directory.\n\n\n\n\n\n\n\n\nFigure 3.4: Saving your R script in Posit Cloud or RStudio.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Assignment Setup</span>"
    ]
  },
  {
    "objectID": "02_setup.html#sec-positexport",
    "href": "02_setup.html#sec-positexport",
    "title": "3  Assignment Setup",
    "section": "3.7 Exporting R file from Posit Cloud",
    "text": "3.7 Exporting R file from Posit Cloud\nTo export your R script from Posit Cloud, follow the instructions below (Figure 3.5).\n\nCheck the box next to the file you wish to export in the Files pane.\nIn the same pane, click More (top right of the Files pane).\nSelect Export... from the dropdown menu.\nBe sure to name your file according to the instructions in the assignment, then click Download.\n\n\n\n\n\n\n\n\n\nFigure 3.5: Exporting your R script from Posit Cloud.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Assignment Setup</span>"
    ]
  },
  {
    "objectID": "02_setup.html#r-script-checklist-for-lab-assignments",
    "href": "02_setup.html#r-script-checklist-for-lab-assignments",
    "title": "3  Assignment Setup",
    "section": "3.8 R script checklist for lab assignments",
    "text": "3.8 R script checklist for lab assignments\nBe sure you have at least the following components in your R script. This list is not comprehensive. It represents the minimal requirements for your R script.\n\nFull name and student ID #\nAssignment name/number (e.g., LA.1)\nAnnotations explaining your R code\nR commands to install (if necessary) and load packages\nR commands necessary for completion of your assignment",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Assignment Setup</span>"
    ]
  },
  {
    "objectID": "02_setup.html#footnotes",
    "href": "02_setup.html#footnotes",
    "title": "3  Assignment Setup",
    "section": "",
    "text": "Keyboard shortcuts are available under Tools \\(\\rightarrow\\) Keyboard Shortcuts Help.↩︎",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Assignment Setup</span>"
    ]
  },
  {
    "objectID": "03_tips.html",
    "href": "03_tips.html",
    "title": "4  Tips on Working with R",
    "section": "",
    "text": "4.1 On labeling and naming objects\nThis chapter contains a collection of tips to help you progress on your R learning journey. Remember that there are many ways to achieve a goal using R code and there is a large community of R users who are often willing and able to help with troubleshooting code (e.g., Stack Overflow, RStudio Community).\nFigure 4.1: All the cats. This image is from Aoshima Island, Japan. Read more about Aoshima Island here.",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Tips on Working with R</span>"
    ]
  },
  {
    "objectID": "03_tips.html#on-labeling-and-naming-objects",
    "href": "03_tips.html#on-labeling-and-naming-objects",
    "title": "4  Tips on Working with R",
    "section": "",
    "text": "R is case-sensitive. We covered this in Section @ref(learning-tips) but it is important enough to repeat. CATS, cats, Cats, cAts, and caTs are all different objects in R (Figure 4.1)!\n\n\n\nObject names cannot include spaces. Therefore, my result is not a valid name, but my.result or my_result will work. You can also use numbers in object names.\nShort, informative labels for objects are best. Obviously, there is some trade-off between labels that are informative (tend to be long) vs. those that are short (tend not to be specific). Use your own judgment and common sense when naming objects. Read more about R coding style in the tidyverse style guide’s Chapters 1 and 2.",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Tips on Working with R</span>"
    ]
  },
  {
    "objectID": "03_tips.html#on-annotating-your-r-script",
    "href": "03_tips.html#on-annotating-your-r-script",
    "title": "4  Tips on Working with R",
    "section": "4.2 On annotating your R script",
    "text": "4.2 On annotating your R script\nWhen writing R code, you should include explanations to your future self or to other team members (e.g., when conducting data analysis for your group project). These explanations can be included as comments and annotations to your R code in the script.\nComments in R begin with #. R recognizes text that follows # as comments and ignores that text when running the code. Include annotations wherever possible; your future self and team members will thank you later.\nBelow is an example of some code that includes annotations and comments. Note that you can use as many # as you want.\n\n## Start by defining an object\nx &lt;- 3+5\n\ny &lt;- x+6 # adding 2 to x and assigning the result to y for later use\n\nz &lt;- x*y # z is the product of x and y\n\nprint(z) # this function displays the result of z in the Console\n\n## Next, I want to determine the mean across x, y, and z\nxyz &lt;- c(x, y, z) # this combines x, y, and z\nprint(xyz)\n\nmean(xyz) # this line calculates the mean of the object, xyz\n\n###############################################################################\n\nWhen you run this script, R recognizes the commands and ignores the comments. However, the comments and annotations are saved in the R script–and your future self and the rest of your team will be grateful.\n\n\n[1] 112\n\n\n[1]   8  14 112\n\n\n[1] 44.66667",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Tips on Working with R</span>"
    ]
  },
  {
    "objectID": "03_tips.html#be-patient",
    "href": "03_tips.html#be-patient",
    "title": "4  Tips on Working with R",
    "section": "4.3 Be patient1",
    "text": "4.3 Be patient1\n\n“Whenever you’re learning a new tool, for a long time, you’re going to suck… But the good news is that is typical; that’s something that happens to everyone, and it’s only temporary.” -Hadley Wickham\n\nThe benefits of learning by doing slowly build and compound over time (Figure 4.2). This means that one must invest time to learn R by doing. You can expect the learning curve to look something like this:\n\n\n\n\n\n\n\n\nFigure 4.2\n\n\n\n\n\nExpect to ride the R rollercoaster (Figure 4.3).\n\n\n\n\n\n\n\n\nFigure 4.3: The R rollercoaster. Artwork by Allison Horst.\n\n\n\n\n\nThe following paragraph is an excerpt from Barrett’s (2021) blog post. The original post is worth reading and keeping in mind as you take this learning journey of R and, more broadly, data science.\n\nThis is the stubbornly quiet path of practice: our abilities lag behind our effort. At the ‘Ugghhhh’ stage, our internal motivation starts to dissolve. Sure, you can make a plot or whatever, but you’re still fighting errors all day. What do you have to show for it at this point? Not that much more, you might feel, than when you started. But our growth is rarely linear: often, it’s explosive, at least at critical moments. We suddenly begin to make connections, which help us build other relationships, and so on. Growth is never infinite, but it’s also rarely as linked to our immediate efforts as we expect.\n\n\n\n\n\nBarrett, Malcolm. 2021. “Data Science as an Atomic Habit.” Malcolm Barrett. January 4, 2021. https://malco.io/2021/01/04/data-science-as-an-atomic-habit/.",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Tips on Working with R</span>"
    ]
  },
  {
    "objectID": "03_tips.html#footnotes",
    "href": "03_tips.html#footnotes",
    "title": "4  Tips on Working with R",
    "section": "",
    "text": "Source: Barrett (2021)↩︎",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Tips on Working with R</span>"
    ]
  },
  {
    "objectID": "04_ggplot2.html",
    "href": "04_ggplot2.html",
    "title": "5  Graphing with ggplot2",
    "section": "",
    "text": "5.1 ggplot2 basics\nThis chapter covers the basics of plotting with the package, ggplot2. This package is contained within a collection of R packages designed for data science known as the tidyverse.\nThe core tidyverse includes packages that we use in everyday data analysis, including:\nTo learn more about the tidyverse, visit tidyverse.org.\nTo start working with graphs, first install and load the required package. Remember that you only have to install the package once (see Section 2.4.5) to review R packages).\nBuilding ggplot graphics is typically a layered process. The function that we use is ggplot(). We use the + to add layers to the function.\nIn the function arguments (i.e., the commands within the parentheses), we define the data set that we want to use with data =, the aesthetics (x- and y-axes) with aes(), and the type of graph with geom.\nAs a reminder, the x- and y-axes on a graph are shown below (Figure 5.1).\nFigure 5.1: The x- and y-axes on a graph.\nIn the steps below, we will build the command sequentially. The ggplot() function will not run until the basic layers are in place.",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Graphing with `ggplot2`</span>"
    ]
  },
  {
    "objectID": "04_ggplot2.html#ggplot2-basics",
    "href": "04_ggplot2.html#ggplot2-basics",
    "title": "5  Graphing with ggplot2",
    "section": "",
    "text": "5.1.1 Step 1. Specify data frame\nUse the dataframe name to specify the data frame you are using to build the plot. For example, if your data frame is named utilities, this line will be utilities |&gt; ggplot(...).\n\ndataframe_name |&gt; \n        ggplot() \n\n\n\n5.1.2 Step 2. Specify x- and y-axes\nNext, use aes() to tell R which variable to place on the x- (x_var) and y-axes (y_var). Note that you are adding this argument within the parentheses of the function, ggplot(). Be sure to close all parentheses–not doing so is a common error in R.\n\ndataframe_name |&gt;\n        ggplot(aes(x = x_var, y = y_var))\n\nIf you are only working with only one variable (e.g., plotting a histogram of one variable), you need only specify the x = variable within aes().\n\n\n5.1.3 Step 3. Add geom\nThe third step is to tell R what type of graph to create–points, lines, bars, histograms, etc.–by adding the geom layer. This function is layered on to the ggplot() function using the + sign.\nFor example, if we would like the relationship between two variables to be represented by a scatter plot, we can simply add geom_point().\n\ndataframe_name  |&gt;  \n        ggplot(aes(x = x_var, y = y_var)) + # note the + sign\n        geom_point()\n\nIf we are plotting the histogram of one variable, we use geom_histogram().\n\ndataframe_name |&gt; \n        ggplot(aes(x = x_var)) + # note the + sign again\n        geom_histogram()\n\nFor a bar plot, we use geom_bar().\n\ndataframe_name |&gt; \n        ggplot(aes(x = x_var)) + # note the + sign yet again\n        geom_bar()",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Graphing with `ggplot2`</span>"
    ]
  },
  {
    "objectID": "04_ggplot2.html#important-considerations",
    "href": "04_ggplot2.html#important-considerations",
    "title": "5  Graphing with ggplot2",
    "section": "5.2 Important considerations",
    "text": "5.2 Important considerations\nThe + sign used to add layers must be placed at the end of each line containing a layer. If the + sign is added in the line before the other layer, ggplot2 will return an error message.\n\n# This is the correct way of adding layers\ndataframe_name |&gt; \n        ggplot( .... ) +\n        geom_point()\n\n# This will give you an error message (note where the + is)\ndataframe_name  |&gt;  \n        ggplot( .... ) \n        + geom_point()",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Graphing with `ggplot2`</span>"
    ]
  },
  {
    "objectID": "04_ggplot2.html#learning-by-doing",
    "href": "04_ggplot2.html#learning-by-doing",
    "title": "5  Graphing with ggplot2",
    "section": "5.3 Learning by doing",
    "text": "5.3 Learning by doing\nLet’s create a graph with a toy data set called quiz.csv. It contains simulated data for Quiz 1 and 2 scores of 120 students. There data set contains three variables:\n\nid: Student ID\nquiz1: Quiz 1 scores\nquiz2: Quiz 2 scores\n\nFirst, make sure you set the working directory correctly on your computer and load the packages.\nDownload this data set (right click, select Save link as..., and change the file extension to .csv, if necessary), save it as a .csv file, and read it into R.\n\nquiz &lt;- read_csv(\"quiz.csv\")\n\n\n5.3.1 Histograms\nLet us examine the distribution of grades for Quiz 1 using a histogram.\nTo better understand what R is doing step-by-step, run these lines one at a time and see what happens in the Plots panel in RStudio.\n\n# 1: Try this command first\nquiz  |&gt;  \n        ggplot()\n\n# 2: Then try this one\nquiz  |&gt;  \n        ggplot(aes(x = quiz1))\n\n# 3: And, finally, try this\nquiz  |&gt;  \n        ggplot(aes(x = quiz1)) +\n        geom_histogram()\n\nAs the exercise shows, the complete command is the third one.\n\nquiz  |&gt;  \n        ggplot(aes(x = quiz1)) +\n        geom_histogram()\n\n\n\n\n\n\n\n\nTo do the same for Quiz 2 grades, simply change the x-axis specification in aes().\n\nquiz |&gt;  \n        ggplot(aes(x = quiz2)) +\n        geom_histogram()\n\n\n\n\n\n\n\n\n\n\n5.3.2 Scatter plots\nWhat if we want to examine whether there is a relationship between Quiz 1 and Quiz 2 scores? You might hypothesize that the scores on Quizzes 1 and 2 should be positively correlated.\nTo examine this graphically, we can use a scatter plot, which depicts the relationship between two quantitative variables. In this case, we use geom_point() to tell R that we want a graph with points.\n\nquiz  |&gt;  \n        ggplot(aes(x = quiz1, y = quiz2)) +\n        geom_point() \n\n\n\n\n\n\n\n\n\n\n5.3.3 Adding axes labels and plot titles\nNo graph is complete without axis labels and a title. We can add axis labels and a plot title with the labs() layer. Again, it is important to add this layer by using the + sign.\n\nquiz |&gt; \n        ggplot(aes(x = quiz1, y = quiz2)) +\n        geom_point() + \n        labs(x = \"Quiz 1 Grades\", \n             y = \"Quiz 2 Grades\",\n             title = \"Relationship between Quiz 1 and Quiz 2 grades in COMM 3710\")",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Graphing with `ggplot2`</span>"
    ]
  },
  {
    "objectID": "04_ggplot2.html#additional-resources-for-graphing",
    "href": "04_ggplot2.html#additional-resources-for-graphing",
    "title": "5  Graphing with ggplot2",
    "section": "5.4 Additional resources for graphing",
    "text": "5.4 Additional resources for graphing\nThis guide includes only the basics of graphing with ggplot2. If you have questions that are not covered in this guide, the R Graphics Cookbook is a practical guide that provides recipes for quickly generating high-quality graphs.",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Graphing with `ggplot2`</span>"
    ]
  },
  {
    "objectID": "LA-1-textbook.html",
    "href": "LA-1-textbook.html",
    "title": "6  LA-1: Ethics in Research",
    "section": "",
    "text": "6.1 Instructions\nFor this assignment, you will complete online training modules on ethical conduct of human subjects research through the Collaborative Institutional Training Initiative (CITI).\nRead the instructions carefully and in their entirety before starting.\nTo complete CITI training, follow the instructions below:",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>LA-1: Ethics in Research</span>"
    ]
  },
  {
    "objectID": "LA-1-textbook.html#instructions",
    "href": "LA-1-textbook.html#instructions",
    "title": "6  LA-1: Ethics in Research",
    "section": "",
    "text": "Open your browser and navigate to https://www.citiprogram.org. Click Register.\nEnter your university affiliation. Click Continue to Step 2.\nFill in your first and last name and your utah.edu email address. Click Continue to Step 3.\nCreate a username and password. Fill in the required fields. When asked to verify your email address, be sure to check your Spam folder for the verification email.\nWhen you are asked Are you interested in the option of receiving Continuing Education Unit credit for completed CITI Program courses? Select No. Remember to answer the required question at the bottom of the page about participation in research surveys.\nUnder Department, type “Communication.” From the drop-down menu of What is your role in research?, select Student researcher – Undergraduate.\nNext, select Group 2: Social/Behavioral Research Investigators and Key Personnel.\nOn the next screen, select I have not previously completed an approved Basic Course.\nOn the Optional Courses screen, select Not at this time.\nClick Finalize registration to complete your registration. If you do not see the Group 2 course on the next screen, click University of Utah Courses to expand the tab. Click on the Group 2 link to start the training.\nComplete all modules with a grade of at least 80%.\nOnce you have completed the modules, click Print Report. Save the resulting report as a PDF file.",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>LA-1: Ethics in Research</span>"
    ]
  },
  {
    "objectID": "LA-1-textbook.html#submission",
    "href": "LA-1-textbook.html#submission",
    "title": "6  LA-1: Ethics in Research",
    "section": "6.2 Submission",
    "text": "6.2 Submission\nSubmit the report as a PDF file on Canvas. An example submission is shown below.",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>LA-1: Ethics in Research</span>"
    ]
  },
  {
    "objectID": "LA-1-textbook.html#example-citi-report",
    "href": "LA-1-textbook.html#example-citi-report",
    "title": "6  LA-1: Ethics in Research",
    "section": "6.3 Example CITI Report",
    "text": "6.3 Example CITI Report\n\n\n\n\n\nExample CITI report to be submitted for this assignment.",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>LA-1: Ethics in Research</span>"
    ]
  },
  {
    "objectID": "LA-2-textbook.html",
    "href": "LA-2-textbook.html",
    "title": "7  LA-2: Setting Up R",
    "section": "",
    "text": "7.1 Learning Outcomes\nIn this assignment, you will learn how to:\nWe will be using Posit Cloud for lab assignments in this course. RStudio, which is the graphical user interface through which many people use R, re-branded themselves as Posit. What used to be called RStudio Cloud is now known as Posit Cloud, but it is the same thing.\nYou can also use R and RStudio as standalone programs offline on your computer, but you will have to download both programs and install them. We will not be covering installation of R on your own machine in this course, but you are welcome to do so on your own (see Chapter 2).",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>LA-2: Setting Up *R*</span>"
    ]
  },
  {
    "objectID": "LA-2-textbook.html#learning-outcomes",
    "href": "LA-2-textbook.html#learning-outcomes",
    "title": "7  LA-2: Setting Up R",
    "section": "",
    "text": "Setup an account on Posit Cloud.\nSetup Your Workspace on Posit Cloud.\nSetup a Project on Posit Cloud.\nWrite a function in R.\nCreate objects in R.\nCall objects that you have created.\nUse R as a calculator.\n\n\n\n\n\n\n\n\n\nTip\n\n\n\nRemember to save your work often.",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>LA-2: Setting Up *R*</span>"
    ]
  },
  {
    "objectID": "LA-2-textbook.html#setting-up-an-account-on-posit-cloud",
    "href": "LA-2-textbook.html#setting-up-an-account-on-posit-cloud",
    "title": "7  LA-2: Setting Up R",
    "section": "7.2 Setting up an account on Posit Cloud",
    "text": "7.2 Setting up an account on Posit Cloud\n\nOpen a web browser and navigate to Posit.Cloud.\nClick on Log In in the top right corner of the page.\nOn the next screen, click on the Sign Up tab or sign in with your Google or Github account (pick one if you have it and would like to use it for the course). You may sign up with any account that you would like.\nOnce you have created an account, log in.",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>LA-2: Setting Up *R*</span>"
    ]
  },
  {
    "objectID": "LA-2-textbook.html#setting-up-posit-cloud",
    "href": "LA-2-textbook.html#setting-up-posit-cloud",
    "title": "7  LA-2: Setting Up R",
    "section": "7.3 Setting up Posit Cloud",
    "text": "7.3 Setting up Posit Cloud\n\nOnce you log in, you will be taken to Your Workspace.\nClick on New Project in the top right corner. From the drop down options, select New RStudio Project.\nAt the top of the screen, click on Untitled Project to name your project. I recommend having a project for each lab assignment.\nYou’re ready to work with R on Posit Cloud! Your TA will help you get familiar with the layout of R. Be sure you know where the Console and Environment panes are located.\nTake a screenshot of your project and save it. This is one of your submissions for this assignment.",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>LA-2: Setting Up *R*</span>"
    ]
  },
  {
    "objectID": "LA-2-textbook.html#your-first-functions",
    "href": "LA-2-textbook.html#your-first-functions",
    "title": "7  LA-2: Setting Up R",
    "section": "7.4 Your First Functions",
    "text": "7.4 Your First Functions\nAt its core, R is a calculator. It can also make fancy figures. Let’s start by giving R some simple commands.\n\nCreate a new R script, name it LA-2_Your Name.R. Your TA will show you how. Think of a script as a list of commands that you (the user) are giving to the computer (R, which is the engine underlying RStudio and Posit Cloud).\nIn your script, type the following command:\n\n\nprint(\"Your Name Here\")\n\n\nRun the command you just wrote in the script and make note of what happens in the Console. To run commands from the script, highlight the command you want to run and click Run in the top right of the script or use the shortcut keys, Ctrl + Enter (Windows) or Command + Enter.\nCopy and paste the output from the Console into your R script then add # in front of it. \n\n\n\n\n\n\n\nNote\n\n\n\nCongratulations, you have just programmed your first function in R!\n\n\nWith your answer, the script should look something like this:\n\nprint(\"Your Name Here\")\n# [1] \"Your Name Here\"\n\n\nYou can also do basic math with R. In your R script, type the following:\n\n\n5*12\n\n\nCopy and paste the result from the Console in your R script. Again, add # in front of it.",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>LA-2: Setting Up *R*</span>"
    ]
  },
  {
    "objectID": "LA-2-textbook.html#creating-objects",
    "href": "LA-2-textbook.html#creating-objects",
    "title": "7  LA-2: Setting Up R",
    "section": "7.5 Creating Objects",
    "text": "7.5 Creating Objects\nYou might notice that the result of the last calculation you did was not saved anywhere. What if we want to use the result in another calculation or operation? To do this, we can save functions and computations into objects. Let’s create some objects in R so we can use them in subsequent calculations.\n\nType the following in your script and run the function. Describe what happened when you ran the command. You can type your answer under the function in your R script. Type # before your answer so that the text turns green, indicating that these are comments in your script (vs. functions). Comments are not evaluated when you run the script; only functions are evaluated.\n\n\nxray &lt;- 4+5\n\n\nIn your R script, describe (i) what happened in the Console and (ii) what happened in the Environment pane when you ran the function above. Remember to use the # to make all your answers into comments in your R script. \nNow, create another object (you can call it whatever you wish) and assign the number 6 to it. Describe what happened in the Console and the Environment when you created this object. \nUse the object you just created as the denominator and divide xray by this object. Describe what happened in the Console and Environment panes when you did this. \nFinally, let’s create an object called fruitsalad from individual fruit. Create four objects, apples, oranges, pears, and grapes. Assign the following numbers to them: 5, 3, 10, 18, respectively. Create fruitsalad by adding the individual fruit together. Write down the result of your fruit salad in your R script.",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>LA-2: Setting Up *R*</span>"
    ]
  },
  {
    "objectID": "LA-2-textbook.html#submission",
    "href": "LA-2-textbook.html#submission",
    "title": "7  LA-2: Setting Up R",
    "section": "7.6 Submission",
    "text": "7.6 Submission\nSubmit your R script (named LA-#_FirstName-LastName.R) to Canvas.\nYour R script should:\n\nInclude commands and functions that are necessary to address all the questions in the assignment.\nContain comments that answer the questions in the assignment.\nRun in its entirety without errors.\n\nTo ensure that your R script runs without errors, you should:\n\nSave your script.\nNavigate back to Your Workspace on Posit Cloud.\nReopen your project.\nRun the entire script line-by-line without editing it to ensure there are no errors.\n\n\n\n\n\n\n\nImportant\n\n\n\nThese standards apply to all submissions in this course that require R scripts. You should follow these instructions for preparation, naming, and saving of your R script for all of your individual lab assignments.",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>LA-2: Setting Up *R*</span>"
    ]
  },
  {
    "objectID": "LA-3-textbook.html",
    "href": "LA-3-textbook.html",
    "title": "8  LA-3: Working with Data",
    "section": "",
    "text": "8.1 Learning Outcomes\nIn this assignment, you will learn how to:",
    "crumbs": [
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>LA-3: Working with Data</span>"
    ]
  },
  {
    "objectID": "LA-3-textbook.html#learning-outcomes",
    "href": "LA-3-textbook.html#learning-outcomes",
    "title": "8  LA-3: Working with Data",
    "section": "",
    "text": "Create a new R script.\nPrepare your R script for your assignment.\nCreate headers in your R script.\nInstall and load packages in R.\nOpen a help page in R.\nManually enter data into R.\nLook at the contents of a data frame or tibble.\nIdentify variables and their types in a tibble.",
    "crumbs": [
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>LA-3: Working with Data</span>"
    ]
  },
  {
    "objectID": "LA-3-textbook.html#setup",
    "href": "LA-3-textbook.html#setup",
    "title": "8  LA-3: Working with Data",
    "section": "8.2 Setup",
    "text": "8.2 Setup\n\nCreate a new R script and set it up for your assignment. In the first four (4) lines of your script, include the following, each on a new line, as a comment:\n\n\nFull name\nStudent ID (u########)\nDate (MM/DD/YY)\nAssignment name\n\n\n\n\n\n\n\nTip\n\n\n\nComments (text preceded by # in your R script) are not run or executed. R will only run/execute commands or functions (text not preceded by #).\n\n\n\nMake a section of code titled “Installing and loading packages.” Under this heading, write pseudocode in preparation to install and load the following packages:\n\n\ntidyverse\nsummarytools\nrstatix\n\n\n\n\n\n\n\nTip\n\n\n\nPseudocode is the plain English version of your R code that described the steps you are taking in R. It should be written as comments in your R script and should make sense to you. Your pseudocode is a tool that helps you decide which R function or command you need to accomplish a given task.\n\n\n\nInstall the packages above using the function, install.packages(). For example, to install the tidyverse package, the command is install.packages(\"tidyverse\"). Remember that typing the command in your R script does not run or execute the function. You must select the text of the function that you want to run and click “Run” in the top right corner of the script pane (or use the shortcut keys).\nLoad the packages. The function to load the packages is library(). To load the tidyverse package, type library(tidyverse) in your script and run it. Note that for each new project you create in Your Workspace on Posit Cloud, you will have to install and load any necessary packages again.",
    "crumbs": [
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>LA-3: Working with Data</span>"
    ]
  },
  {
    "objectID": "LA-3-textbook.html#entering-data-manually",
    "href": "LA-3-textbook.html#entering-data-manually",
    "title": "8  LA-3: Working with Data",
    "section": "8.3 Entering Data Manually",
    "text": "8.3 Entering Data Manually\nIn the next step, we will enter data into R manually using the c() function, which is short for combine(). Before we do so, let’s learn about the function we will be using.\n\nCreate a new section of code where you can explore and learn about the c() function.\nTo read the documentation for any function, you can add ? in front of the command and run it. This will pull up the documentation (including examples at the very end of the documentation) in the Help tab in the bottom right pane. For example, if I wanted to read the documentation for the library() function, I would run the command: ?library(). Copy and paste the description from the Help pane for the c() function in your R script as a comment.\n\n\n\n\n\n\n\nTip\n\n\n\nThe documentation may not seem helpful at first glance, but once you become more familiar with R and its commands, the Help documentation becomes a useful resource.\n\n\n\nEnter the data in the table below as four (4) objects called Aname, Ateam, PPG (points per game), and REB (rebounds per game). There are two data types in the data table, numeric and character. Your TA will show you how to assign the data to the objects.\n\n\n\n\n2023-24 data of top 5 women's college basketball players by points per game (PPG).\n\n\nAname\nAteam\nPPG\nREB\n\n\n\n\nC. Clark\nIowa\n31.6\n7.4\n\n\nJ. Watkins\nUSC\n27.1\n7.3\n\n\nL. Olsen\nVill\n23.2\n4.8\n\n\nC. Watson\nBuffalo\n23.0\n5.1\n\n\nE. Kitley\nVT\n22.8\n11.4\n\n\n\n\n\n\n\n\nCheck that you have created the objects correctly by calling each object. Calling an object in R allows you to see it in the Console. To call an object, type the name of the object in the Console and press Enter. Or type the name of the object in your R script, then highlight and run it. Copy and paste the results of calling the objects into your R script as comments. You can find the output in the Console pane.\nCombine the objects into a single data frame that has a name of your choosing and look at the data frame. Use the tibble() function to do this. The data in the data frame should match that in Table 1. Call the data frame in the Console. Copy and paste the output as a comment in your R script.",
    "crumbs": [
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>LA-3: Working with Data</span>"
    ]
  },
  {
    "objectID": "LA-3-textbook.html#examining-types-of-data",
    "href": "LA-3-textbook.html#examining-types-of-data",
    "title": "8  LA-3: Working with Data",
    "section": "8.4 Examining Types of Data",
    "text": "8.4 Examining Types of Data\n\nNow, we will examine the type of data stored in each column of our data frame. To do this, we will use the class() function. Let’s start by reading the documentation for the class() function. Copy and paste the description of this function from the Help pane as a comment in your R script.\nDetermine the class of each column in your data frame. For example, if I wanted to check the class of Aname, I would use the function class() with the arguments: df$Aname. The whole command would look like this: class(df$Aname). Copy and paste the class of each column in your R script.",
    "crumbs": [
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>LA-3: Working with Data</span>"
    ]
  },
  {
    "objectID": "LA-3-textbook.html#submission",
    "href": "LA-3-textbook.html#submission",
    "title": "8  LA-3: Working with Data",
    "section": "9.1 Submission",
    "text": "9.1 Submission\nSubmit your R script (named LA-#_FirstName-LastName.R) to Canvas.\nYour R script should:\n\nInclude commands and functions that are necessary to address all the questions in the assignment.\nContain comments that answer the questions in the assignment.\nRun in its entirety without errors.\n\nTo ensure that your R script runs without errors, you should:\n\nSave your script.\nNavigate back to Your Workspace on Posit Cloud.\nReopen your project.\nRun the entire script line-by-line without editing it to ensure there are no errors.\n\n\n\n\n\n\n\nImportant\n\n\n\nThese standards apply to all submissions in this course that require R scripts. You should follow these instructions for preparation, naming, and saving of your R script for all of your individual lab assignments.",
    "crumbs": [
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>LA-3: Working with Data</span>"
    ]
  },
  {
    "objectID": "LA-4-textbook.html",
    "href": "LA-4-textbook.html",
    "title": "9  LA-4: Data Wrangling",
    "section": "",
    "text": "9.1 Learning Outcomes\nIn this assignment, you will learn how to:",
    "crumbs": [
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>LA-4: Data Wrangling</span>"
    ]
  },
  {
    "objectID": "LA-4-textbook.html#learning-outcomes",
    "href": "LA-4-textbook.html#learning-outcomes",
    "title": "9  LA-4: Data Wrangling",
    "section": "",
    "text": "Read/Load data into R (in LA-3, you learned how to enter data into R manually).\nUse the pipe operator, |&gt;.\nFilter cases from a data frame using the filter() function.\nSummarize variables using the summarise() function.\n\n\n\n\n\n\n\nTip\n\n\n\nRead all the instructions carefully before starting the assignment. Set up your R script as you did in LA-3.",
    "crumbs": [
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>LA-4: Data Wrangling</span>"
    ]
  },
  {
    "objectID": "LA-4-textbook.html#instructions",
    "href": "LA-4-textbook.html#instructions",
    "title": "9  LA-4: Data Wrangling",
    "section": "9.2 Instructions",
    "text": "9.2 Instructions\n\nSet up your R script for this assignment (name, uNID, date, assignment number). Install (if necessary) and load the packages below.\n\n\ntidyverse\nsummarytools\nrstatix\n\n\nDownload the data file called broadway.csv from Canvas and upload it to your project for this assignment on Posit Cloud.\nRead the data into an object in R using the read_csv() function. For example, you might call your object, which will be a data frame, bway or b. Feel free to be creative with your object name; keep in mind that you will likely have to type the name of the data frame in your code many times.\nLet’s get a sense of our data using the glimpse() function. This function, which is included in the tidyverse suite of packages for R, allows us to get a glimpse of our data. To use this function, the command is: glimpse(df) where df is the name of your data frame.\nUsing the results of glimpse() in your Console, answer the following questions (as comments in your R script).\n\nHow many cases are there in the broadway dataset?\nHow many variables are there in the broadway dataset?\n\nNow that we know the dimensions of our data frame (i.e., rows/cases, columns/variables), let’s get a little more familiar with these data. Download the codebook from Canvas (.csv file) and take a look at the names and descriptions of the variables. In your R script, answer the following questions:\n\nWhat does the variable, Statistics.Performances, measure?\nWhat is the name of the variable that describes the maximum amount that a show can earn?\n\nIn the next step, we will learn to use the pipe operator. The pipe operator, |&gt;, is used to perform sequential functions in R. It is part of the package, magrittr and also included in the tidyverse package. You can also think of the pipe operator, |&gt;, as “then.” If we were to use |&gt; to describe a daily routine, it might look something like this:\n Woke up |&gt;\n Took a shower |&gt;\n Got dressed |&gt;\n Made breakfast |&gt;\n Ate breakfast |&gt;\n Went to class\nNow, we will work on an example using the broadway data. We want to figure out the average number of people who attended the show for Mamma Mia! and The Lion King. Answer the question below as comments in your R script (be sure to label this clearly in the script).\n\nWhat is the name of the variable that tells us the name of the show?\nWhat does the variable, Date.Month, measure and what is the format of the data in this variable?\nWhat is the name of the variable that measures the attendance per show?\n\nNext, write the steps (in plain language as comments, i.e., pseudocode) to determine the average attendance per show for Mamma Mia! and The Lion King, respectively. An example of pseudocode is shown below.\n\n\n    #| label: ex7\n\n    # Start with the broadway data frame, which I called bway\n    # Filter for cases that only contain Mamma Mia! from the broadway data using the Show.Name variable\n    # Calculate the mean of the attendance among these cases\n\nTranslate the pseudocode to R functions using the pipe operator and calculate the mean attendance for *Mamma Mia!*.\n\n    #| label: ex7a\n    #| echo: TRUE\n    #| eval: false\n    #| include: TRUE\n    #| tidy: TRUE\n\n    bway |&gt; # Start with the broadway data frame\n            filter(Show.Name == \"Mamma Mia!\") |&gt; # Filter for only Mamma Mia! cases\n            summarise(Mattd = mean(Statistics.Attendance, na.rm = TRUE)) # Find mean\n\n# A tibble: 1 × 1\n   Mattd\n   &lt;dbl&gt;\n1 10436.\n\n    # Note that na.rm = TRUE removes NAs (i.e., missing values) from the calculation\n    # of the mean, if there are any in your dataset. We don't have those in this\n    # dataset, though.\n\n\nLet’s say we also want to know the minimum and maximum number of people who attended a Mamma Mia! show. To do so, add arguments to the summarise() function.\n\n\n    #| label: ex7b \n    #| echo: true \n    #| eval: false \n    #| include: true \n    #| tidy: true  \n\n    bway |&gt; # Start with the broadway data frame         \n            filter(Show.Name == \"Mamma Mia!\") |&gt; # Filter for only Mamma Mia! cases       \n            summarise(M_attd = mean(Statistics.Attendance, na.rm = TRUE), # Find mean   \n                      min_attd = min(Statistics.Attendance, na.rm = TRUE), # Find minimum \n                      max_attd = max(Statistics.Attendance, na.rm = TRUE)) # Find maximum}\n\n# A tibble: 1 × 3\n  M_attd min_attd max_attd\n   &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;\n1 10436.     3307    13742\n\n\nUsing the calculations performed by the R commands above, answer the following questions:\n\na)  What is the minimum number of people who attended Mamma Mia!?\nb)  What is the maximum number of people who attended Mamma Mia!?\nc)  What is the mean number of people who attended Mamma Mia!?\n\n\n\n\n\n\nNote\n\n\n\nThere is a function that is part of the package, summarytools, that will enable you to obtain these statistics with a single function. For 2 bonus points, try to figure out this function and use it in this exercise.\n\n\n\nUse the same logic and process from the example above to answer the following questions.\n\nWhat is the minimum number of people who attended The Lion King?\nWhat is the maximum number of people who attended The Lion King?\nWhat is the mean number of people who attended The Lion King?\nCompare the statistics you just calculate for Mamma Mia! and The Lion King. Overall, which show would you say is more successful?\n\nUsing |&gt; and the functions you just learned, write R code to determine the answers to the questions below. Round your answer to the nearest whole dollar.\n\nAmong shows in the Majestic theater that are Musicals, what is the minimum, maximum, and mean “Gross Gross” in dollars?\nAmong shows in the Vivian Beaumont theater that are Musicals, what is the minimum, maximum, and mean “Gross Gross” in dollars?\nComparing the statistics you just calculated, is the Vivian Beaumont or Majestic theatre more successful?",
    "crumbs": [
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>LA-4: Data Wrangling</span>"
    ]
  },
  {
    "objectID": "LA-4-textbook.html#submission",
    "href": "LA-4-textbook.html#submission",
    "title": "9  LA-4: Data Wrangling",
    "section": "9.3 Submission",
    "text": "9.3 Submission\nSubmit your R script (named LA-#_FirstName-LastName.R) to Canvas.\nYour R script should:\n\nInclude commands and functions that are necessary to address all the questions in the assignment.\nContain comments that answer the questions in the assignment.\nRun in its entirety without errors.\n\nTo ensure that your R script runs without errors, you should:\n\nSave your script.\nNavigate back to Your Workspace on Posit Cloud.\nReopen your project.\nRun the entire script line-by-line without editing it to ensure there are no errors.\n\n\n\n\n\n\n\nImportant\n\n\n\nThese standards apply to all submissions in this course that require R scripts. You should follow these instructions for preparation, naming, and saving of your R script for all of your individual lab assignments.",
    "crumbs": [
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>LA-4: Data Wrangling</span>"
    ]
  },
  {
    "objectID": "LA-5-textbook.html",
    "href": "LA-5-textbook.html",
    "title": "10  LA-5: More Data Wrangling",
    "section": "",
    "text": "10.1 Learning Outcomes\nIn this assignment, you will learn how to:",
    "crumbs": [
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>LA-5: More Data Wrangling</span>"
    ]
  },
  {
    "objectID": "LA-5-textbook.html#learning-outcomes",
    "href": "LA-5-textbook.html#learning-outcomes",
    "title": "10  LA-5: More Data Wrangling",
    "section": "",
    "text": "Run and examine frequency distributions using the freq() function in the summarytools package.\nView descriptive statistics using the descr() function in the summarytools package.\nRecoding variables using the case_when() function.\nCreate new variables from existing variables in a data frame using the mutate() function.\n\n\n\n\n\n\n\nTip\n\n\n\nRead all the instructions carefully before starting the assignment.",
    "crumbs": [
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>LA-5: More Data Wrangling</span>"
    ]
  },
  {
    "objectID": "LA-5-textbook.html#instructions",
    "href": "LA-5-textbook.html#instructions",
    "title": "10  LA-5: More Data Wrangling",
    "section": "10.2 Instructions",
    "text": "10.2 Instructions\n\nInstall (install.packages()) and load (library()) the packages below. Then download wind-turbines.csv dataset from Canvas and read it in to R. You will also want to download the codebook for the data from Canvas.\n\ntidyverse\nsummarytools\nrstatix\n\nThe dataset includes data about wind turbines in the US. Use the freq() function to examine the frequency distributions of the variables Site.State and Year. Use the frequency distributions to answer the following questions.\n\nHow many wind turbines are located in Utah?\nHow many wind turbines became operational in 2021?\nWhat percentage of turbines became operational between 1983 and 1999 (include these years in the calculation)?\n\nNow, subset the data to answer the following question: How many turbines in Utah have been operational since 2010?\nExamine the frequency distribution of Turbine.Capacity based on the subset in #3.\n\nHow many turbines in this subset have a capacity of 2,300 kW?\nWhat percentage of turbines in this subset have a capacity of 1,500 kW?\n\nOften, we want to look at descriptive statistics of a quantitative variable. We can do this using the descr() function that is in the package summarytools. Examine the descriptive statistics for Turbine.Total_Height and answer the questions below. Include the units of measurement in your answers.\n\nWhat is the mean?\nWhat is the median?\nWhat is the maximum?\n\nNext, we will learn how to use the function, mutate(). We use this function to create new variables (or “mutate” them) from existing ones. Let’s create a new variable called Turbine_Space that is the mean of two existing variables, Turbine.Hub_Height and Turbine.Rotor_Diameter. Then, examine the descriptive statistics of the new variable, Turbine_Space, and answer the following questions:\n\nWhat is the mean of Turbine_Space?\nWhat is the minimum value of Turbine_Space?\nWhat is the maximum value of Turbine_Space?\n\nSometimes, we may want to make continuous variables into categorical variables. For example, let’s say we are interested in the number of turbines in a project, Project.Number_Turbines, but we want to categorize them into low vs. high numbers of turbines in projects.\n\nWe refer to this process as recoding variables. For this exercise, let’s recode projects with 100 turbines or less into the low category and those that have more than 100 turbines into the high category.\n\nUse the mutate() and case_when() functions to recode Project.Number_Turbines into a new variable, Project.Number, with only two categories, low (\\(\\le\\) 100) and high (\\(&gt;\\) 100). Then, answer the following questions.\n\nHow many projects are in the low category?\nHow many projects are in the high category?\n\nBONUS: In the previous step, you created a new variable called Project.Number. What is the mean Project.Capacity among projects in the (a) low and (b) high Project.Number categories?",
    "crumbs": [
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>LA-5: More Data Wrangling</span>"
    ]
  },
  {
    "objectID": "LA-5-textbook.html#submission",
    "href": "LA-5-textbook.html#submission",
    "title": "10  LA-5: More Data Wrangling",
    "section": "10.3 Submission",
    "text": "10.3 Submission\nSubmit your R script (named LA-#_FirstName-LastName.R) to Canvas.\nYour R script should:\n\nInclude commands and functions that are necessary to address all the questions in the assignment.\nContain comments that answer the questions in the assignment.\nRun in its entirety without errors.\n\nTo ensure that your R script runs without errors, you should:\n\nSave your script.\nNavigate back to Your Workspace on Posit Cloud.\nReopen your project.\nRun the entire script line-by-line without editing it to ensure there are no errors.\n\n\n\n\n\n\n\nImportant\n\n\n\nThese standards apply to all submissions in this course that require R scripts. You should follow these instructions for preparation, naming, and saving of your R script for all of your individual lab assignments.",
    "crumbs": [
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>LA-5: More Data Wrangling</span>"
    ]
  },
  {
    "objectID": "LA-6-textbook.html",
    "href": "LA-6-textbook.html",
    "title": "11  LA-6: Data Visualization",
    "section": "",
    "text": "11.1 Learning Outcomes\nIn this assignment, you will:",
    "crumbs": [
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>LA-6: Data Visualization</span>"
    ]
  },
  {
    "objectID": "LA-6-textbook.html#learning-outcomes",
    "href": "LA-6-textbook.html#learning-outcomes",
    "title": "11  LA-6: Data Visualization",
    "section": "",
    "text": "Learn how to use ggplot2, which is a package included in the tidyverse suite of packages, to create visualizations using data.\nPractice using functions from LA-5, including mutate(), freq(), and descr().\n\n\n\n\n\n\n\nTip\n\n\n\nRead all the instructions carefully before starting the assignment.",
    "crumbs": [
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>LA-6: Data Visualization</span>"
    ]
  },
  {
    "objectID": "LA-6-textbook.html#instructions",
    "href": "LA-6-textbook.html#instructions",
    "title": "11  LA-6: Data Visualization",
    "section": "11.2 Instructions",
    "text": "11.2 Instructions\n\nLoad the packages below and download the Utilities.csv data file from Canvas. Read the dataset into R. Use the codebook on Canvas to familiarize yourself with the data in this file.\n\ntidyverse\nsummarytools\n\nRead and follow along with Chapter 5. Use the data provided in Chapter 5 and follow along with this chapter.\n\n\n\n\n\n\n\nTip\n\n\n\nDo not skip this step (Step 2). It will help you understand ggplot2.\n\n\n\nMake a histogram to display the distribution of customers’ total monthly bill.\n\nUse the histogram you created and describe the distribution. Is the distribution skewed or symmetric? If skewed, is the distribution skewed positively or negatively?\nAt what cost do most of the total monthly bills fall? Provide a range between which the total monthly bills fall.\n\nMake a scatterplot to display gas bill by month. Use your graph to answer the following questions.\n\nWhich month do you think has the highest average gas bill?\nUse R to calculate the average gas bill for the months of January and December. Which is higher?\n\nMake a scatterplot to display electric bill by month. Use your graph to answer the following questions.\n\nWhich month do you think has the highest average electric bill?\nCalculate the average electric bill for the months of September and December. Which is higher?\n\nMake a scatter plot to display the relationship between gas usage and gas bill. Place gas usage on the x-axis and monthly gas bill on the y-axis. Does there appear to be a relationship between gas usage and gas bill? If so, describe the relationship (e.g., does a relationship exist? Is it linear? Is there a positive or negative relationship between the variables?).\nMake a scatterplot to show the relationship between electricity usage and electric bill. Does there appear to be a relationship between electricity usage and electric bill? If so, describe the relationship.\nCreate a new categorical variable called season. Have the variable equal winter if the bill was from December, January, or February. Have the variable equal spring if the bill was from March, April, or May. Have the variable equal summer if the bill was from June, July, or August. Have the variable equal fall if the bill was from September, October, or November.\n\nThen, examine a frequency table of season.\n\nHow many bills in the data set are from fall?\nHow many bills in the data set are from summer?\n\nBONUS (2 points): Make a bar chart using the geom_col() to display the count or proportion of donors by season.\n\nFirst, make a new variable, DonorStatus. Set DonorStatus equal to 1 if the billee donated money to Operation Fuel and 0 otherwise. Check that you have created the DonorStatus variable correctly.\n\nThen, use ggplot() to create your graph. In your own words, describe the graph. Does donation vary by season?",
    "crumbs": [
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>LA-6: Data Visualization</span>"
    ]
  },
  {
    "objectID": "LA-6-textbook.html#submission",
    "href": "LA-6-textbook.html#submission",
    "title": "11  LA-6: Data Visualization",
    "section": "11.3 Submission",
    "text": "11.3 Submission\nSubmit your R script (named LA-#_FirstName-LastName.R) to Canvas.\nYour R script should:\n\nInclude commands and functions that are necessary to address all the questions in the assignment.\nContain comments that answer the questions in the assignment.\nRun in its entirety without errors.\n\nTo ensure that your R script runs without errors, you should:\n\nSave your script.\nNavigate back to Your Workspace on Posit Cloud.\nReopen your project.\nRun the entire script line-by-line without editing it to ensure there are no errors.\n\n\n\n\n\n\n\nImportant\n\n\n\nThese standards apply to all submissions in this course that require R scripts. You should follow these instructions for preparation, naming, and saving of your R script for all of your individual lab assignments.",
    "crumbs": [
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>LA-6: Data Visualization</span>"
    ]
  },
  {
    "objectID": "LA-7-textbook.html",
    "href": "LA-7-textbook.html",
    "title": "12  LA-7: Examining Relationships",
    "section": "",
    "text": "12.1 Learning Outcomes\nIn this assignment, you will:",
    "crumbs": [
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>LA-7: Examining Relationships</span>"
    ]
  },
  {
    "objectID": "LA-7-textbook.html#learning-outcomes",
    "href": "LA-7-textbook.html#learning-outcomes",
    "title": "12  LA-7: Examining Relationships",
    "section": "",
    "text": "Select the appropriate statistical test.\nConduct a statistical test.\nInterpret the results of a statistical test.\n\n\n\n\n\n\n\nTip\n\n\n\nRead all the instructions carefully before starting the assignment.",
    "crumbs": [
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>LA-7: Examining Relationships</span>"
    ]
  },
  {
    "objectID": "LA-7-textbook.html#instructions",
    "href": "LA-7-textbook.html#instructions",
    "title": "12  LA-7: Examining Relationships",
    "section": "12.2 Instructions",
    "text": "12.2 Instructions\n\nLoad the packages below and download the covid.csv data file from Canvas. Read the dataset into R. Use the codebook on Canvas to familiarize yourself with the data in this file.\n\ntidyverse\nsummarytools\nrstatix\n\nCreate a new variable called region. Have the variable equal Americas if the country is Brazil, Canada, Mexico, or the United States. Have the variable equal Asia if the country is China, India, Japan, Singapore, or South Korea. Have the variable equal Europe is the country is Denmark, France, Germany, Italy, or Spain. Run a frequency distribution of region. Which region has the highest frequency?\nLet’s say we want to conduct a statistical test to determine whether the total number of contacts people had on the previous day differs by region. First, answer the questions below. Be sure to include your answers as comments in your R file.\n\nWhich variables are involved in this statistical test? Which is the independent variable? Which is the dependent variable?\nRun a frequency distribution of total_contacts. Is this variable categorical or continuous?\nIs the variable region continuous or categorical?\nGiven your answers to the previous questions, what statistical test should you use? Why? Refer to the flowchart (Figure 12.1) to help select a statistical test.\n\nConduct the statistical test from your answer to 3d. Answer the following questions.\n\nWhat is the test statistic and the probability value (i.e., p-value) associated with that test statistic?\nBased on the test statistic and the p-value, do the number of total contacts differ by region?\n\nNext, let’s compare how mask-wearing differs between the first and second year after the COVID outbreak. Follow the steps below to select and conduct the appropriate statistical test.\n\nState your hypothesis. Do you think more people wore masks when they went outside in the first or second year after the outbreak? Why?\nIdentify the dependent variable. Is it continuous or categorical?\nWhat variable can you use to create the independent variable? Describe how you might recode an existing variable to create the independent variable. Then, create this new variable using the mutate() and case_when() functions. Is this new variable continuous or categorical?\nSelect (Figure 12.1) and conduct the appropriate statistical test.\nReport the test statistic and probability value as a comment in your R script.\nCalculate the means and standard deviations of the dependent variable for the first and second years after the COVID outbreak. Include these descriptive statistics in your R script. Did people wear masks more often when they went outside in the first or second year after the outbreak?\nDoes the statistical test support your hypothesis?",
    "crumbs": [
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>LA-7: Examining Relationships</span>"
    ]
  },
  {
    "objectID": "LA-7-textbook.html#submission",
    "href": "LA-7-textbook.html#submission",
    "title": "12  LA-7: Examining Relationships",
    "section": "12.3 Submission",
    "text": "12.3 Submission\nSubmit your R script (named LA-#_FirstName-LastName.R) to Canvas.\nYour R script should:\n\nInclude commands and functions that are necessary to address all the questions in the assignment.\nContain comments that answer the questions in the assignment.\nRun in its entirety without errors.\n\nTo ensure that your R script runs without errors, you should:\n\nSave your script.\nNavigate back to Your Workspace on Posit Cloud.\nReopen your project.\nRun the entire script line-by-line without editing it to ensure there are no errors.\n\n\n\n\n\n\n\nImportant\n\n\n\nThese standards apply to all submissions in this course that require R scripts. You should follow these instructions for preparation, naming, and saving of your R script for all of your individual lab assignments.",
    "crumbs": [
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>LA-7: Examining Relationships</span>"
    ]
  },
  {
    "objectID": "LA-7-textbook.html#selecting-a-statistical-test",
    "href": "LA-7-textbook.html#selecting-a-statistical-test",
    "title": "12  LA-7: Examining Relationships",
    "section": "12.4 Selecting a Statistical Test",
    "text": "12.4 Selecting a Statistical Test\n\n\n\n\n\n\n\n\nFigure 12.1: Selecting a statistical test.",
    "crumbs": [
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>LA-7: Examining Relationships</span>"
    ]
  },
  {
    "objectID": "LA-7-textbook.html#conducting-a-statistical-test-in-r",
    "href": "LA-7-textbook.html#conducting-a-statistical-test-in-r",
    "title": "12  LA-7: Examining Relationships",
    "section": "12.5 Conducting a Statistical Test in R",
    "text": "12.5 Conducting a Statistical Test in R\n\n12.5.1 Chi-squared test\nA chi-squared test is used when we want to compare two categorical variables. To do so in R, you can use the following command (df, dep_var, and ind_var have to be replaced with the names of your dataframe, dependent variable, and independent variable, respectively). The output that results from running this command in R is shown below as comments.\n\nchisq_test(x = df$ind_var, y = df$dep_var)\n\n# A tibble: 1 × 6\n#       n statistic         p    df method          p.signif\n# * &lt;int&gt;     &lt;dbl&gt;     &lt;dbl&gt; &lt;int&gt; &lt;chr&gt;           &lt;chr&gt;   \n# 1   291      22.5 0.0000133     2 Chi-square test **** \n\nTo report the results of your chi-squared test in APA format, you would use the following format, replacing the text in bold font with the results from your Console:\n\n\\(\\chi^2\\)(df, \\(N\\) = n) = statistic, p = p\n\nFrom the results of the above chi-squared test, I would report results like this: \\(\\chi^2(df = 2, N = 291) = 22.5\\), \\(p &lt; .001\\). If the p-value is less than .001, you do not need to report the exact value. If it is greater than .001, then report the exact value rounded to two or three decimal places.\n\n\n12.5.2 t-test\nA t-test is used to compare the mean values of a continuous variable between two groups. To do so in R, you can use the following command (df, dep_var, and ind_var have to be replaced with the names of your dataframe, dependent variable, and independent variable, respectively). The output that results from running this command in R is shown below as comments.\n\ndf |&gt; \n        t_test(dep_var ~ ind_var)\n\n# A tibble: 1 × 10\n#   .y.        group1 group2    n1    n2 statistic    df        p    p.adj p.adj.signif\n# * &lt;chr&gt;      &lt;chr&gt;  &lt;chr&gt;  &lt;int&gt; &lt;int&gt;     &lt;dbl&gt; &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt; &lt;chr&gt;       \n# 1 dep_var ind_var1  ind_var2  54    70     -12.2  122. 6.49e-23 6.49e-23 ****   \n\nTo report the results of your chi-squared test in APA format, you would use the following format, replacing the text in bold font with the results from your Console:\n\n\\(t\\)(df) = statistic, p = p\n\nUsing the results above, I would report the results of a t-test like this: \\(t(df = 122) = -12.2\\), \\(p &lt; .001\\).\n\n\n12.5.3 Analysis of variance (ANOVA)\nANOVA is used when we want to compare the mean values of continuous variable between more than two groups. To do so in R, you can use the following command (df, dep_var, and ind_var have to be replaced with the names of your dataframe, dependent variable, and independent variable, respectively). The output that results from running this command in R is shown below as comments.\n\ndf |&gt; \n        anova_test(dep_var ~ ind_var)\n\n# ANOVA Table (type II tests)\n#\n#   Effect  DFn DFd     F        p p&lt;.05   ges\n# 1 ind_var   2 157 7.505 0.000771     * 0.087\n\nTo report the results in APA format:\n\n\\(F\\) (DFn, DFd) = F-value, \\(p =\\) p-value\n\nUsing the results above, I would report: \\(F(2, 157) = 7.51\\), \\(p &lt; .001\\).",
    "crumbs": [
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>LA-7: Examining Relationships</span>"
    ]
  },
  {
    "objectID": "LA-8-textbook.html",
    "href": "LA-8-textbook.html",
    "title": "13  LA-8: Practice Data Analysis",
    "section": "",
    "text": "13.1 Learning Outcomes\nIn this assignment, you will practice the data analysis skills that you have learned this semester.",
    "crumbs": [
      "<span class='chapter-number'>13</span>  <span class='chapter-title'>LA-8: Practice Data Analysis</span>"
    ]
  },
  {
    "objectID": "LA-8-textbook.html#learning-outcomes",
    "href": "LA-8-textbook.html#learning-outcomes",
    "title": "13  LA-8: Practice Data Analysis",
    "section": "",
    "text": "Tip\n\n\n\nRead all the instructions carefully before starting the assignment.",
    "crumbs": [
      "<span class='chapter-number'>13</span>  <span class='chapter-title'>LA-8: Practice Data Analysis</span>"
    ]
  },
  {
    "objectID": "LA-8-textbook.html#instructions",
    "href": "LA-8-textbook.html#instructions",
    "title": "13  LA-8: Practice Data Analysis",
    "section": "13.2 Instructions",
    "text": "13.2 Instructions\n\nDownload the full COVID dataset (covid-full.csv) and codebook (covid-full-codebook.csv). Use the codebook to familiarize yourself with the variables in the data and read the data into R. Install the packages that we have been using this semester.\nCreate a new variable called asia_europe. Have the variable equal Asia if the country is China, India, Japan, Singapore, or South Korea. Have the variable equal Europe is the country is Denmark, France, Germany, Italy, or Spain.\n\nObtain descriptive statistics for the number of time respondents washed their hands on the previous day for Asia and Europe.\n\nWhat is the mean and standard deviation of handwashes in Asia?\nWhat is the mean and standard deviation of handwashes in Europe?\n\n\nConduct a statistical test to determine whether there is a significant difference in the number of times people living in Asia compared to Europe washed their hands.\n\nState your hypothesis.\nSelect and conduct a statistical test to address your hypothesis.\nReport the test statistic and p-value.\nDoes the statistical test support or refute your hypothesis?\n\n\n\n\n\n\n\n\nTip\n\n\n\nRemember that you can use Figure 12.1 to select a statistical test that is appropriate for the level of measurement of the variables.\n\n\n\nImplement the appropriate statistical test to determine whether there is a significant linear relationship between how many times people left their home and the total number of contacts they had with other people.\n\nState your hypothesis.\nSelect and conduct a statistical test to address your hypothesis.\nReport the test statistic and p-value.\nDoes the statistical test support or refute your hypothesis? If there is a significant relationship, describe it. Does this finding make sense? Why or why not?\n\nIs there a difference in whether the majority of respondents in Asia compared to those in Europe said their lives were impacted by COVID?\n\nState your hypothesis.\nSelect and conduct a statistical test to address your hypothesis.\nReport the test statistic and p-value.\nDoes the statistical test support or refute your hypothesis? If there is a significant difference, describe it (e.g., which region, Asia or Europe, had more respondents who said their lives were impacted by COVID). You can use the filter() and freq() functions to help you describe the differences.\n\nBONUS: Use the data and a statistical test to determine whether there is a relationship between the number of days since the COVID outbreak began and how often respondents wore masks outside. Conduct the statistical test, report the results of the test (i.e., test statistic and p-value) and explain your conclusion.\nBONUS: Create a figure showing the number of times people living in Asia and Europe washed their hands. Remove the x-axis label so that only the tick marks are labeled (i.e., with “Asia” and “Europe”) and rename the y-axis label to “Average number of times people washed their hands on the previous day.”",
    "crumbs": [
      "<span class='chapter-number'>13</span>  <span class='chapter-title'>LA-8: Practice Data Analysis</span>"
    ]
  },
  {
    "objectID": "LA-8-textbook.html#submission",
    "href": "LA-8-textbook.html#submission",
    "title": "13  LA-8: Practice Data Analysis",
    "section": "13.3 Submission",
    "text": "13.3 Submission\nSubmit your R script (named LA-#_FirstName-LastName.R) to Canvas.\nYour R script should:\n\nInclude commands and functions that are necessary to address all the questions in the assignment.\nContain comments that answer the questions in the assignment.\nRun in its entirety without errors.\n\nTo ensure that your R script runs without errors, you should:\n\nSave your script.\nNavigate back to Your Workspace on Posit Cloud.\nReopen your project.\nRun the entire script line-by-line without editing it to ensure there are no errors.\n\n\n\n\n\n\n\nImportant\n\n\n\nThese standards apply to all submissions in this course that require R scripts. You should follow these instructions for preparation, naming, and saving of your R script for all of your individual lab assignments.",
    "crumbs": [
      "<span class='chapter-number'>13</span>  <span class='chapter-title'>LA-8: Practice Data Analysis</span>"
    ]
  },
  {
    "objectID": "LA-9-textbook.html",
    "href": "LA-9-textbook.html",
    "title": "14  LA-9: Practice Data Analysis",
    "section": "",
    "text": "14.1 Learning Outcomes\nIn this assignment, you will practice the data analysis skills that you have learned this semester.",
    "crumbs": [
      "<span class='chapter-number'>14</span>  <span class='chapter-title'>LA-9: Practice Data Analysis</span>"
    ]
  },
  {
    "objectID": "LA-9-textbook.html#learning-outcomes",
    "href": "LA-9-textbook.html#learning-outcomes",
    "title": "14  LA-9: Practice Data Analysis",
    "section": "",
    "text": "Tip\n\n\n\nRead all the instructions carefully before starting the assignment.",
    "crumbs": [
      "<span class='chapter-number'>14</span>  <span class='chapter-title'>LA-9: Practice Data Analysis</span>"
    ]
  },
  {
    "objectID": "LA-9-textbook.html#instructions",
    "href": "LA-9-textbook.html#instructions",
    "title": "14  LA-9: Practice Data Analysis",
    "section": "14.2 Instructions",
    "text": "14.2 Instructions\n\nDownload the CPS dataset (CPS.csv) and codebook (CPS-codebook.csv). Use the codebook to familiarize yourself with the variables in the data and read the data into R. Install the packages that we have been using this semester.\n\nData for this assignment comes from the 1985 Current Population Survey (CPS). The CPS is used to supplement census information between census years. These data consist of a random sample of persons from the survey, with information on wages and other characteristics of the workers, including sex, number of years of education, years of work experience, occupational status, region of residence and union membership. This data frame has 534 observations.\n\nFind the mean wage earned per hour for males and females.\n\nWhat is the mean wage earned per hour for females?\nWhat is the mean wage earned per hour for males?\n\nImplement the appropriate statistical test to determine whether males have significantly higher wages earned per hour than females.\n\nState your hypothesis about whether males earn higher wages per hour than females.\nWhich statistical test will you use to address your hypothesis? Conduct the statistical test you have chosen.\nWhat is the test statistic and associated p-value?\nDoes the test support or refute your hypothesis? Do males or females earn higher wages on average?\n\nImplement the appropriate statistical test to determine whether there is a significant linear relationship between wages earned per hour and number of years of work experience.\n\nState your hypothesis about the relationship between wages earned per hour and number of years of experience.\nWhich statistical test will you use to address your hypothesis? Conduct the statistical test you have chosen.\nWhat is the test statistic and associated p-value?\nDoes the test support or refute your hypothesis? What is the relationship, if any, between wages earned per hour and number of years of experience?\n\nImplement the appropriate statistical test to determine whether job satisfaction varies significantly among the different job sectors.\n\nState your hypothesis about whether job satisfaction varies significantly among job sectors.\nWhich statistical test will you use to address your hypothesis? Conduct the statistical test you have chosen.\nWhat is the test statistic and associated p-value?\nDoes the test support or refute your hypothesis? Does job satisfaction vary among different job sectors?\n\nImplement the appropriate statistical test to determine whether wages vary by job sector.\n\nState your hypothesis about whether wages and job sector are related.\nWhich statistical test will you use to address your hypothesis? Conduct the statistical test you have chosen.\nWhat is the test statistic and associated p-value?\nDoes the test support or refute your hypothesis? Do wages vary among different job sectors?",
    "crumbs": [
      "<span class='chapter-number'>14</span>  <span class='chapter-title'>LA-9: Practice Data Analysis</span>"
    ]
  },
  {
    "objectID": "LA-9-textbook.html#submission",
    "href": "LA-9-textbook.html#submission",
    "title": "14  LA-9: Practice Data Analysis",
    "section": "14.3 Submission",
    "text": "14.3 Submission\nSubmit your R script (named LA-#_FirstName-LastName.R) to Canvas.\nYour R script should:\n\nInclude commands and functions that are necessary to address all the questions in the assignment.\nContain comments that answer the questions in the assignment.\nRun in its entirety without errors.\n\nTo ensure that your R script runs without errors, you should:\n\nSave your script.\nNavigate back to Your Workspace on Posit Cloud.\nReopen your project.\nRun the entire script line-by-line without editing it to ensure there are no errors.\n\n\n\n\n\n\n\nImportant\n\n\n\nThese standards apply to all submissions in this course that require R scripts. You should follow these instructions for preparation, naming, and saving of your R script for all of your individual lab assignments.",
    "crumbs": [
      "<span class='chapter-number'>14</span>  <span class='chapter-title'>LA-9: Practice Data Analysis</span>"
    ]
  }
]